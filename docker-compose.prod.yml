version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: dropout_prediction_mongodb_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: dropout_prediction
    volumes:
      - mongodb_data_prod:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - dropout_network_prod

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: dropout_prediction_backend_prod
    restart: always
    environment:
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/dropout_prediction?authSource=admin
      - MONGODB_DB_NAME=dropout_prediction
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - DEBUG=False
    depends_on:
      - mongodb
    volumes:
      - ./ml/models:/app/ml/models
    networks:
      - dropout_network_prod

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: dropout_prediction_frontend_prod
    restart: always
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    depends_on:
      - backend
    networks:
      - dropout_network_prod

  nginx:
    image: nginx:alpine
    container_name: dropout_prediction_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - dropout_network_prod

volumes:
  mongodb_data_prod:

networks:
  dropout_network_prod:
    driver: bridge
